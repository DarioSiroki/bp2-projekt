[{"/app/frontend/src/index.js":"1","/app/frontend/src/reportWebVitals.js":"2","/app/frontend/src/App.tsx":"3","/app/frontend/src/components/PageLoading.tsx":"4","/app/frontend/src/views/Login.tsx":"5"},{"size":500,"mtime":1609625375712,"results":"6","hashOfConfig":"7"},{"size":388,"mtime":1609625375712,"results":"8","hashOfConfig":"7"},{"size":239,"mtime":1609625375712,"results":"9","hashOfConfig":"7"},{"size":228,"mtime":1609553446455,"results":"10","hashOfConfig":"7"},{"size":1639,"mtime":1609625375712,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"gyrgex",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},"/app/frontend/src/index.js",[],["26","27"],"/app/frontend/src/reportWebVitals.js",[],"/app/frontend/src/App.tsx",["28"],"import './App.css';\nimport Login from \"./views/Login\";\nimport PageLoading from \"./components/PageLoading\";\n// <PageLoading />\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Login />\n    </div>\n  );\n}\n\nexport default App;\n",["29","30"],"/app/frontend/src/components/PageLoading.tsx",[],"/app/frontend/src/views/Login.tsx",["31","32"],"import { Form, Input, Button, Checkbox, Typography, Layout } from 'antd';\nimport { Row, Col } from 'antd';\n\nconst layout = {\n  wrapperCol: { span: 8 },\n};\nconst tailLayout = {\n  wrapperCol: { span: 16 },\n};\n\nconst { Title } = Typography;\nconst { Content } = Layout;\n\nconst Login = () => {\n  const onFinish = (values: any) => {\n    console.log('Success:', values);\n  };\n\n  const onFinishFailed = (errorInfo: any) => {\n    console.log('Failed:', errorInfo);\n  };\n\n  return (\n    <Layout>\n      <Content style={{ margin: '24px 16px 0'}}>\n        <Title> LOGIN </Title>\n        <Form\n          {...layout}\n          name=\"basic\"\n          initialValues={{ remember: true }}\n          onFinish={onFinish}\n          onFinishFailed={onFinishFailed}\n        >\n          <Form.Item\n            label=\"Username\"\n            name=\"username\"\n            rules={[{ required: true, message: 'Please input your username!' }]}\n          >\n            <Input />\n          </Form.Item>\n\n          <Form.Item\n            label=\"Password\"\n            name=\"password\"\n            rules={[{ required: true, message: 'Please input your password!' }]}\n          >\n            <Input.Password />\n          </Form.Item>\n\n          <Form.Item {...tailLayout} name=\"remember\" valuePropName=\"checked\">\n            <Checkbox>Remember me</Checkbox>\n          </Form.Item>\n\n          <Form.Item {...tailLayout}>\n            <Button type=\"primary\" htmlType=\"submit\">\n              Submit\n            </Button>\n          </Form.Item>\n        </Form>\n        <p>Not a member? <a href=\"/sign-up\">Sign up</a> </p>\n      </Content>\n    </Layout>\n  );\n};\n\nexport default Login;\n",{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":3,"column":8,"nodeType":"39","messageId":"40","endLine":3,"endColumn":19},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"41","line":2,"column":10,"nodeType":"39","messageId":"40","endLine":2,"endColumn":13},{"ruleId":"37","severity":1,"message":"42","line":2,"column":15,"nodeType":"39","messageId":"40","endLine":2,"endColumn":18},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"@typescript-eslint/no-unused-vars","'PageLoading' is defined but never used.","Identifier","unusedVar","'Row' is defined but never used.","'Col' is defined but never used.","no-global-assign","no-unsafe-negation"]