INSERT INTO task_manager.prioritet (naziv) VALUES("visoki");
INSERT INTO task_manager.prioritet (naziv) VALUES("srednji");
INSERT INTO task_manager.prioritet (naziv) VALUES("nizak");
INSERT INTO task_manager.status (naziv, opis) VALUES ("Na čekanju", "Još nitko nije započeo rad na zadatku.");
INSERT INTO task_manager.status (naziv, opis) VALUES ("U tijeku", "Zadatak je u tijeku izvršavanja.");
INSERT INTO task_manager.status (naziv, opis) VALUES ("Završen", "Zadatak je završen.");
INSERT INTO task_manager.privilegija(naziv, opis) VALUES("admin", "Admin");
INSERT INTO task_manager.privilegija(naziv, opis) VALUES("create_task", "Create tasks");

ALTER TABLE `task_manager`.`dodijeljen` 
DROP FOREIGN KEY `dodijeljen_korisnik_id`,
DROP FOREIGN KEY `dodijeljen_zadatak_id`;
ALTER TABLE `task_manager`.`dodijeljen` 
ADD CONSTRAINT `dodijeljen_korisnik_id`
  FOREIGN KEY (`korisnik_id`)
  REFERENCES `task_manager`.`korisnik` (`korisnik_id`)
  ON DELETE CASCADE
  ON UPDATE CASCADE,
ADD CONSTRAINT `dodijeljen_zadatak_id`
  FOREIGN KEY (`zadatak_id`)
  REFERENCES `task_manager`.`zadatak` (`zadatak_id`)
  ON DELETE CASCADE
  ON UPDATE CASCADE;

ALTER TABLE `task_manager`.`komentar` 
DROP FOREIGN KEY `komentar_korisnik_id`,
DROP FOREIGN KEY `komentar_zadatak_id`;
ALTER TABLE `task_manager`.`komentar` 
ADD CONSTRAINT `komentar_korisnik_id`
  FOREIGN KEY (`korisnik_id`)
  REFERENCES `task_manager`.`korisnik` (`korisnik_id`)
  ON DELETE CASCADE
  ON UPDATE CASCADE,
ADD CONSTRAINT `komentar_zadatak_id`
  FOREIGN KEY (`zadatak_id`)
  REFERENCES `task_manager`.`zadatak` (`zadatak_id`)
  ON DELETE CASCADE
  ON UPDATE CASCADE;


stavi cascade i na komentare

INSERT INTO dopustenje(korisnik_id, organizacija_id, privilegija_id)
VALUES(58, 1, 5)

drop trigger IF EXISTS check_perms;
DELIMITER $$
CREATE TRIGGER check_perms
BEFORE INSERT
ON zadatak FOR EACH ROW
BEGIN
    DECLARE has_perm int;
    SELECT EXISTS(
		SELECT * 
        FROM dopustenje d
        JOIN privilegija p on d.privilegija_id=p.privilegija_id
        WHERE d.korisnik_id=NEW.kreator_id AND (p.naziv='create_task' OR p.naziv='admin')
	) INTO has_perm;

	IF has_perm<1
	THEN
		SIGNAL SQLSTATE '02000' SET MESSAGE_TEXT = 'Missing sufficient permissions.';
	END IF;
END $$
DELIMITER ;

drop trigger IF EXISTS auto_add_admin;
DELIMITER $$
CREATE TRIGGER auto_add_admin
AFTER INSERT
ON organizacija FOR EACH ROW
BEGIN
	declare admin_permission_id int ;
    
    SELECT privilegija_id FROM privilegija WHERE naziv="admin" into admin_permission_id;
    
    INSERT INTO dopustenje(korisnik_id, privilegija_id, organizacija_id)
    VALUES (NEW.kreator_id, admin_permission_id, NEW.organizacija_id);
    
    INSERT INTO pripada(korisnik_id, organizacija_id)
    VALUES (NEW.kreator_id, NEW.organizacija_id);
END $$
DELIMITER ;